@model AdotaPatos.Models.Voluntario

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .cor {
        background: #FF830F;
    }

    .espaco {
        padding-top: 32px;
    }

    label {
        font-weight: bold;
    }
</style>

<div class="card">
    <div class="card-header  text-white h3 text-center text-white" style="background: #FF830F;">Detetar Voluntario</div><br />


    <div class="text-danger h5 text-center">
        Tem certeza que deseja deletar o Voluntario?
        <hr />
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="container-fluid">
        <div class="form-row" style="margin-left: 45px;">
            <div class="form-a col-md-4">
                <label for="Nome">Nome</label>
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="Naturalidade">Naturalidade</label>
                @Html.EditorFor(model => model.Naturalidade, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="Sexo">Sexo</label>
                @Html.EditorFor(model => model.Sexo, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="EstadoCivil">Estado Civil</label>
                @Html.EditorFor(model => model.EstadoCivil, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="DataNascimento">Data Nascimento</label>
                @*@Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control",@type="text" ,disabled = "disabled" } })*@
                <input name="DataNascimento" value="@ViewBag.data" class="form-control" disabled />
            </div>

            <div class="form-group col-md-4">
                <label for="Rg">Rg</label>
                @Html.EditorFor(model => model.Rg, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="Cpf">Cpf</label>
                @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="Profissao">Profissão</label>
                @Html.EditorFor(model => model.Profissao, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="Endereco">Endereço</label>
                @Html.EditorFor(model => model.Endereco, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="Cep">Cep</label>
                @Html.EditorFor(model => model.Cep, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="Cidade">Cidade</label>
                @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="Uf">Uf</label>
                @Html.EditorFor(model => model.Uf, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="Telefone">Telefone</label>
                @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="Email">Email</label>
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="Dia">Dia</label>
                @Html.EditorFor(model => model.Dia, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="Turno">Turno</label>
                @Html.EditorFor(model => model.Turno, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="Doacao">Doação</label>
                @Html.EditorFor(model => model.Doacao, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="ServicoAjuda">Serviço</label>
                @Html.EditorFor(model => model.ServicoAjuda, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
            </div>

            <div class="form-group col-md-4">
                <label for="Observacao">Observações</label>
                @Html.TextAreaFor(model => model.Observacao, htmlAttributes: new { @class = "form-control", rows = "8", disabled = "disabled" })
            </div>

        </div>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" style="padding: 20px; margin-left: 30px">
                    <button type="submit" class="btn cor text-white"> <i class="fa fa-check "></i> Deletar Voluntario </button>
                    <a href="/Voluntario/Index" class="btn btn-dark text-white"><i class="fa fa-mail-reply "></i> Voltar para Listagem de Voluntarios</a>
                </div>

            </div>
        }
    </div>
</div>


<script>
    $(document).ready(function () {
        $('.Cep').mask('00000-000', { reverse: true });
    });
</script>

<script>
    $(document).ready(function () {
        $('body').on('focus', '.phone', function () {
            var maskBehavior = function (val) {
                return val.replace(/\D/g, '').length === 11 ? '(00) 00000-0000' : '(00) 0000-00009';
            },
                options = {
                    onKeyPress: function (val, e, field, options) {
                        field.mask(maskBehavior.apply({}, arguments), options);

                        if (field[0].value.length >= 14) {
                            var val = field[0].value.replace(/\D/g, '');
                            if (/\d\d(\d)\1{7,9}/.test(val)) {
                                field[0].value = '';
                                alert('Telefone Invalido');
                            }
                        }
                    }
                };
            $(this).mask(maskBehavior, options);
        });
    });
</script>

<script type="text/javascript">
    var message = 'message';
    var today = new Date();
    document.getElementById("DataNascimento").value = today.toLocaleDateString("pt-br");
    document.getElementById("DataAdesao").value = today.toLocaleDateString("pt-br");

    $(document).ready(function () {
        $("#DataNascimento").datepicker({ dateFormat: 'dd/mm/yyyy' });
        $("#DataAdesao").datepicker({ dateFormat: 'dd/mm/yyyy' });
    });

    function validarDatas(frm) {
        var data_1 = document.getElementById("dataIni").value;
        var data_2 = document.getElementById("dataFin").value;
        var Compara01 = data_1.split("/");
        var Compara02 = data_2.split("/");
        console.log(Compara01);
        console.log(Compara02);
        if ((Compara01 > Compara02)) {

            toastr.error('Data final não pode ser menor que a inicial!', 'Campos obrigatórios: ', {
                closeButton: true,
                progressBar: true,
                debug: false,
                newestOnTop: false,
                positionClass: "toast-top-right",
                preventDuplicates: false,
                onclick: null,
                showDuration: "300",
                hideDuration: "1000",
                timeOut: "5000",
                extendedTimeOut: "1000",
                showEasing: "swing",
                hideEasing: "linear",
                showMethod: "fadeIn",
                hideMethod: "fadeOut",
            });
            return false;
        } else {
            document.getElementById("msg").innerHTML = "";

        }
    }
</script>